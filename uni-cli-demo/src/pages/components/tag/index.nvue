<template>
	<kui-page :custom-header="false">
		<template v-slot:body>
			<view class="kui-mb-3">
				<!-- <kui-cell-group title="暗黑模式">
					<kui-switch v-model="modeChecked" @change="changeMode"></kui-switch>
				</kui-cell-group> -->
			</view>
			<kui-cell-group title="标签类型">
				<view class="kui-w-full">
					<kui-space :gap="15">
						<kui-tag text="默认标签" />
						<kui-tag type="primary" text="主要标签" />
						<kui-tag type="info" text="信息标签" />
						<kui-tag type="danger" text="危险标签" />
						<kui-tag type="warning" text="警告标签" />
						<kui-tag type="success" text="成功标签" />
					</kui-space>
				</view>
			</kui-cell-group>
			<view class="kui-mt-3">
				<kui-cell-group title="空心标签">
					<kui-tag type="primary" plain text="空心标签" />
				</kui-cell-group>
			</view>
			<view class="kui-mt-3">
				<kui-cell-group title="方形标签">
					<kui-tag shape="square" type="primary" text="方形标签" />
				</kui-cell-group>
			</view>
			<view class="kui-mt-3">
				<kui-cell-group title="标签尺寸">
					<view class="kui-mb-3">
						<kui-tag size="large" type="primary" text="大号标签" />
					</view>
					<kui-space :gap="15" align="center">
						<kui-tag size="normal" type="primary" text="普通标签" />
						<kui-tag size="small" type="primary" text="小型标签" />
						<kui-tag size="mini" type="primary" text="迷你标签" />
					</kui-space>
				</kui-cell-group>
			</view>
			<view class="kui-mt-3">
				<kui-cell-group title="块级标签">
					<view class="kui-w-full">
						<kui-tag type="primary" block text="块级标签" />
					</view>
				</kui-cell-group>
			</view>
			<view  class="kui-mt-3">
				<kui-cell-group title="半圆角标签">
					<view class="kui-w-full">
						<view class="kui-mb-3">
							<kui-tag size="large" half-round="right" type="primary" text="大号标签" />
						</view>
						<kui-space :gap="[30,20]" align="center">
							<kui-tag size="normal" half-round="right" type="primary" text="普通标签" />
							<kui-tag size="small" half-round="right" type="primary" text="小型标签" />
							<kui-tag size="mini" half-round="right" type="primary" text="迷你标签" />
						</kui-space>
					</view>
					<view class="kui-w-full">
						<view class="kui-my-3">
							<kui-tag size="large" half-round="left" type="primary" text="大号标签" />
						</view>
						<kui-space :gap="[30,20]" align="center">
							<kui-tag size="normal" half-round="left" type="primary" text="普通标签" />
							<kui-tag size="small" half-round="left" type="primary" text="小型标签" />
							<kui-tag size="mini" half-round="left" type="primary" text="迷你标签" />
						</kui-space>
					</view>
				</kui-cell-group>
			</view>
			<view class="kui-mt-3">
				<kui-cell-group title="可关闭标签">
					<kui-space :gap="[30,20]">
						<kui-tag closable text="可关闭标签" />
						<kui-tag closable close-icon="close" text="自定义关闭图标" />
					</kui-space>
				</kui-cell-group>
			</view>
			<view class="kui-mt-3">
				<kui-cell-group title="加载中标签">
					<kui-space :gap="[30,20]">
						<kui-tag loading text="加载中标签" />
						<kui-tag loading loading-icon="spinner9" text="自定义图标" />
					</kui-space>
				</kui-cell-group>
			</view>
			<view class="kui-mt-3">
				<kui-cell-group title="可选中标签" desc="(控制台可查看组件选中结果)">
					<kui-space :gap="[30,20]">
						<kui-tag type="primary" checkable text="默认未选中" />
						<kui-tag type="primary" checkable :default-checked="true" text="默认选中" />
						<kui-tag name="checkTag1" type="info" ref="checkableTag1" checkable :default-checked="state.checked1" text="点击选中" @click="onCheck1" />
						<kui-tag name="checkTag2" type="info" ref="checkableTag2" checkable :default-checked="state.checked2" :auto-checked="state.autoChecked" text="点击手动选中" @click="onCheck2" />
					</kui-space>
				</kui-cell-group>
			</view>
			<view class="kui-mt-3">
				<kui-cell-group title="自定义颜色">
					<kui-space :gap="[30,20]">
						<kui-tag background-color="pink" text-color="#fff" text="标签" />
						<kui-tag background-color="pink" plain text="标签" />
						<kui-tag background-color="rgba(0,0,0,1)" border-color="rgba(0,0,0,0.1)" plain text="标签" />
						<kui-tag background-color="#FFE4BA" text-color="#FF7D00" text="标签" />
					</kui-space>
				</kui-cell-group>
			</view>
			<view class="kui-mt-3">
				<kui-cell-group title="自定义插槽">
					<kui-space :gap="[30,20]">
						<kui-tag text="左侧插槽">
							<template v-slot:left-icon>
								<kui-icons :size="20" name="favor-filled" />
							</template>
						</kui-tag>
						<kui-tag text="右侧插槽">
							<template v-slot:right-icon>
								<kui-icons :size="20" name="like-filled" />
							</template>
						</kui-tag>
						<kui-tag text="左右两侧插槽">
							<template v-slot:left-icon>
								<kui-icons :size="20" name="favor-filled" />
							</template>
							<template v-slot:right-icon>
								<kui-icons :size="20" name="like-filled" />
							</template>
						</kui-tag>
					</kui-space>
				</kui-cell-group>
			</view>
		</template>
	</kui-page>
</template>

<script lang="ts" setup>
	import {
		getCurrentInstance,
		reactive,
		nextTick,
		toRefs
	} from 'vue';
	
	import KuiPage from '@kviewui/kviewui/src/page/index.vue';
	import KuiCellGroup from '@kviewui/kviewui/src/cell-group/index.vue';
	import KuiTag from '@kviewui/kviewui/src/tag/index.vue';
	import KuiIcons from '@kviewui/kviewui/src/icons/index.vue';
	import KuiSpace from '@kviewui/kviewui/src/space/index.vue';
	// import { modal } from '@/common/utils/utils';
	import { showModal } from '@kviewui/utils';
	
	const {
		proxy
	}: any = getCurrentInstance();
	const theme = proxy.$theme;
	
	const state = reactive({
		checked1: false,
		checked2: false,
		autoChecked: false,
		mode: 'light',
		modeChecked: false
	});
	
	const onCheck1 = (e) => {
		console.log(e);
		nextTick(() => {
			state.checked1 = !state.checked1;
			setTimeout(() => {
				console.log(proxy.$refs['checkableTag1'].getState());
			}, 0);
		})
	}
	
	const onCheck2 = (e) => {
		nextTick(() => {
			state.autoChecked = false;
			if (!state.checked2) {
				showModal('提示', '是否选中', true, '否', '是', '#999', '#00BC79', false, (res: UniNamespace.ShowModalRes) => {
					if (res.confirm) {
						state.autoChecked = true;
						state.checked2 = true;
						setTimeout(() => {
							console.log(proxy.$refs['checkableTag2'].getState());
						}, 0);
					}
				})
			} else {
				showModal('提示', '是否取消选中', true, '否', '是', '#999', '#00BC79', false, (res: UniNamespace.ShowModalRes) => {
					if (res.confirm) {
						state.autoChecked = true;
						state.checked2 = false;
						setTimeout(() => {
							console.log(proxy.$refs['checkableTag2'].getState());
						}, 0);
					}
				})
			}
			console.log(proxy.$refs['checkableTag2'].getState());
		})
	}
	
	const changeMode = () => {
		state.mode = state.mode == "light" ? "dark" : "light";
		uni.$emit("changeMode", state.mode);
	};
</script>

<style>

</style>
